
global
        log 127.0.0.1   local0
        log 127.0.0.1   local1 notice
        user root
        group root
        # daemon

  tune.ssl.default-dh-param 2048

  ssl-default-bind-options no-sslv3 no-tls-tickets
  ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA


defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        option forwardfor
        option http-server-close
        timeout connect 5000
        timeout client 50000
        timeout server 50000
        #errorfile 400 /usr/local/etc/haproxy/errors/400.http
        #errorfile 403 /usr/local/etc/haproxy/errors/403.http
        #errorfile 408 /usr/local/etc/haproxy/errors/408.http
        #errorfile 500 /usr/local/etc/haproxy/errors/500.http
        #errorfile 502 /usr/local/etc/haproxy/errors/502.http
        #errorfile 503 /usr/local/etc/haproxy/errors/503.http
        #errorfile 504 /usr/local/etc/haproxy/errors/504.http
        stats enable
        stats auth username:password
        stats uri /haproxyStats

frontend http-in
        bind *:80

        # Define hosts based on domain names
        acl host_veva hdr(host) -i ratings.umunhum.space
        acl host_vserver hdr(host) -i api.umunhum.space
        acl host_ethstats hdr(host) -i ethstats.umunhum.space


        # http-request redirect prefix https://%[hdr(host),regsub(^www\.,,i)] if { hdr_beg(host) -i www.veva.one }

        # redirect scheme https if { hdr(Host) -i veva.one } !{ ssl_fc }



        ## figure out backend to use based on domainname
        use_backend vserver if host_vserver
	    use_backend veva if host_veva
        use_backend ethstats if host_ethstats




backend vserver 
    balance roundrobin
    option httpclose
    option forwardfor
    server s1 192.0.0.1:9030

backend veva
    balance roundrobin
    option httpclose
    option forwardfor
    server s2 192.0.0.1:3001

backend ethstats
    balance roundrobin
    option httpclose
    option forwardfor
    server s4 192.0.0.1:3000


